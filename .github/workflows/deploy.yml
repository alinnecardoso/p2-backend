name: Deploy

on:
  push:
    branches:
      - main        # Deploy para produ√ß√£o
      - develop     # Deploy para teste
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîê Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: üè∑Ô∏è Generate tags
        id: tags
        run: |
          if [[ $GITHUB_REF == refs/heads/main ]]; then
            echo "IMAGE_TAG=latest" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=production" >> $GITHUB_OUTPUT
          elif [[ $GITHUB_REF == refs/heads/develop ]]; then
            echo "IMAGE_TAG=develop" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=staging" >> $GITHUB_OUTPUT
          else
            echo "IMAGE_TAG=pr-${{ github.event.number }}" >> $GITHUB_OUTPUT
            echo "ENVIRONMENT=review" >> $GITHUB_OUTPUT
          fi

      - name: üê≥ Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/p2-backend:${{ steps.tags.outputs.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: üöÄ Deploy to Render (Production)
        if: github.ref == 'refs/heads/main'
        run: |
          curl -X POST \
            "${{ secrets.RENDER_DEPLOY_HOOK_PROD }}" \
            -H "Content-Type: application/json" \
            -d '{}'

      - name: üß™ Deploy to Render (Staging)
        if: github.ref == 'refs/heads/develop'
        run: |
          curl -X POST \
            "${{ secrets.RENDER_DEPLOY_HOOK_STAGING }}" \
            -H "Content-Type: application/json" \
            -d '{}'